//
//  ProductListPresenter.swift
//  SCBBuyerGuide
//
//  Created NiM on 5/27/2561 BE.
//  Copyright © 2561 NiM. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import JGProgressHUD

class ProductListPresenter: ProductListPresenterProtocol {

    weak private var view: ProductListViewProtocol?
    var interactor: ProductListInteractorProtocol?
    private let router: ProductListWireframeProtocol

    init(interface: ProductListViewProtocol, interactor: ProductListInteractorProtocol?, router: ProductListWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    func reloadView() {
        self.view?.reloadData(sortOption: self.interactor?.dataSource.sortOption ?? .id, forceUpdate: true)
    }
    
    func setDataSource(for tableView:UITableView) {
        let dataSource = self.interactor?.dataSource
        dataSource?.cellDelegate = self
        tableView.dataSource = dataSource
    }
    
    func requestProductList(for view: UIView) {
        let progress = JGProgressHUD()
        progress.show(in: view)

        self.interactor?.requestProductList(completion: { (list, errorMessage) in
            progress.dismiss()
            
            if let error = errorMessage {
                self.view?.producListErrorOccur(reason: error)
            } else {
                self.view?.reloadData(sortOption: .id, forceUpdate: false)
            }
        })
    }
    
    func reloadData(sortOption:SortOption = .id, forceUpdate:Bool = false) {
        self.interactor?.reloadData(sortOption: sortOption, forceUpdate: forceUpdate)
    }
    
    func favoriteShouldRemove(item: Product) {
        self.interactor?.favoriteShouldRemove(item: item)
    }
    
    func favoriteButtonDidSelect(at index: Int, selected: Bool) -> Product? {
        return self.interactor?.favoriteButtonDidSelect(at:index, selected:selected)
    }
    
    func getItem(at index: Int) -> Product {
        return self.interactor!.getItem(at:index)
    }
    
    func getIndex(for item: Product) -> Int? {
        return self.interactor?.getIndex(for:item)
    }
}

extension ProductListPresenter : ProductTableViewCellDelegate {
    
    func favoriteButtonDidSelect(at cell: ProductTableViewCell, selected: Bool) {        
        if let indexPath = self.view?.getIndexPath(for: cell),
            let item = self.favoriteButtonDidSelect(at: indexPath.row, selected: selected) {
            self.view?.producListDidSelectFavorite(for: item, selected: selected)
        }
        
    }
    
}
